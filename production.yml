version: '3.3'

volumes:
  questionbot_postgres_data: { }
  questionbot_postgres_data_backups: { }
  questionbot_redis_data:

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    container_name: questionbot_django
    hostname: django
    depends_on:
      - postgres
    volumes:
      - .:/app:z
      - /var/www/questionbot.itlink.uz/media:/app/media:z
      - /var/www/questionbot.itlink.uz/static:/app/staticfiles:z
    env_file:
      - ./.env
    ports:
      - '8070:8000'
    environment:
      - DJANGO_SETTINGS_MODULE=api.core.production
    command: /start
    networks:
      - tg_bot


  bot:
    image: "${BOT_IMAGE_NAME:-tg_bot-image}"
    container_name: "${BOT_CONTAINER_NAME:-tg_bot-container}"
    stop_signal: SIGINT
    build:
      context: .
    working_dir: "/usr/src/app/${BOT_NAME:-tg_bot}"
    volumes:
      - .:/usr/src/app/${BOT_NAME:-tg_bot}
    depends_on:
      - django
    command: python3 -m bot
    restart: always
    env_file:
      - ".env"
    ports:
      - '5070:5000'
    networks:
      - tg_bot

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    container_name: questionbot_production
    volumes:
      - questionbot_postgres_data:/var/lib/postgresql/data
      - questionbot_postgres_data_backups:/backups
    env_file:
      - .env
    networks:
      - tg_bot

  redis:
    image: redis
    container_name: questionbot_redis
    hostname: redis
    volumes:
      - questionbot_redis_data:/data
    command: redis-server --port 6380
    networks:
      - tg_bot

  celeryworkerbeat:
    <<: *django
    container_name: questionbot_celeryworkerbeat
    depends_on:
      - redis
      - postgres
    ports: [ ]
    command: /start-celeryworker

  celerybeat:
    <<: *django
    container_name: questionbot_celerybeat
    depends_on:
      - redis
      - postgres
    ports: [ ]
    command: /start-celerybeat

networks:
  tg_bot:
    driver: bridge
